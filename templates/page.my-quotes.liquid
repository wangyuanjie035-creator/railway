{% comment %}
  ËçâÁ®øËÆ¢ÂçïËØ¶ÊÉÖÈ°µ
  URL: /pages/my-quotes?id=<draftOrderId>
  ÂäüËÉΩÔºöÊòæÁ§∫ËçâÁ®øËÆ¢ÂçïËØ¶ÊÉÖÔºåÂÆ¢Êà∑ÂèØ‰ª•Êü•ÁúãÊä•‰ª∑Âπ∂ÁÇπÂáª"Á´ãÂç≥‰∏ãÂçï"Ê∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶
  ÂÆâÂÖ®ÔºöÈúÄË¶ÅÂÆ¢Êà∑ÁôªÂΩïÊâçËÉΩÊü•Áúã
{% endcomment %}

<!-- ÂÆ¢Êà∑ÁôªÂΩïÊ£ÄÊü• -->
{% unless customer %}
<div class="customer-login-required">
  <div class="login-prompt-card">
    <div class="login-prompt-icon">üîí</div>
    <h2>ÈúÄË¶ÅÁôªÂΩï</h2>
    <p>ËØ∑ÂÖàÁôªÂΩïÊÇ®ÁöÑË¥¶Êà∑‰ª•Êü•ÁúãÊÇ®ÁöÑËØ¢‰ª∑Âçï</p>
    <div class="login-actions">
      <a href="/account/login?return_url={{ request.path | url_encode }}" class="login-link-btn primary">
        <span class="btn-icon">üîê</span>
        ÁôªÂΩïË¥¶Êà∑
      </a>
      <a href="/account/register?return_url={{ request.path | url_encode }}" class="login-link-btn secondary">
        <span class="btn-icon">‚ú®</span>
        Ê≥®ÂÜåÊñ∞Ë¥¶Êà∑
      </a>
    </div>
  </div>
</div>

<style>
  .customer-login-required {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 20px;
  }

  .login-prompt-card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 20px 60px rgba(0,0,0,0.3);
    padding: 50px 40px;
    max-width: 450px;
    width: 100%;
    text-align: center;
    animation: slideIn 0.3s ease-out;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .login-prompt-icon {
    font-size: 64px;
    margin-bottom: 20px;
  }

  .login-prompt-card h2 {
    color: #333;
    font-size: 28px;
    margin: 0 0 15px 0;
  }

  .login-prompt-card p {
    color: #666;
    font-size: 16px;
    margin: 0 0 30px 0;
    line-height: 1.6;
  }

  .login-actions {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .login-link-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding: 14px 28px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .login-link-btn.primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .login-link-btn.primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(102,126,234,0.4);
  }

  .login-link-btn.secondary {
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
  }

  .login-link-btn.secondary:hover {
    background: #f8f9ff;
    transform: translateY(-2px);
  }
</style>

{% else %}
<!-- ÂÆ¢Êà∑Â∑≤ÁôªÂΩïÔºåÊòæÁ§∫ËØ¢‰ª∑ÂÜÖÂÆπ -->
<div class="customer-authenticated" data-customer-email="{{ customer.email }}">

<style>
  .quote-detail-container {
    max-width: 1200px;
    margin: 40px auto;
    padding: 0 20px;
  }
  
  .quote-header {
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 24px;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }
  
  .quote-actions {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .refresh-btn {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    padding: 8px 12px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .refresh-btn:hover {
    background: #e9ecef;
    border-color: #adb5bd;
  }
  
    .refresh-btn:active {
      transform: rotate(180deg);
    }
    
    /* ËÆ¢ÂçïÂàóË°®Ê†∑Âºè */
    .orders-list-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .orders-list-header {
      text-align: center;
      margin-bottom: 30px;
    }
    
    .orders-list-header h2 {
      color: #333;
      margin-bottom: 10px;
    }
    
    .orders-list-header p {
      color: #666;
      font-size: 14px;
    }
    
    .orders-list {
      display: grid;
      gap: 20px;
    }
    
    .order-card {
      background: white;
      border: 1px solid #e0e0e0;
      border-radius: 12px;
      padding: 20px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .order-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      border-color: #007bff;
    }
    
    .order-card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      padding-bottom: 10px;
      border-bottom: 1px solid #f0f0f0;
    }
    
    .order-number {
      font-weight: bold;
      font-size: 16px;
      color: #333;
    }
    
    .order-status {
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 500;
    }
    
    .order-card-body {
      margin-bottom: 15px;
    }
    
    .order-info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }
    
    .order-date {
      color: #666;
      font-size: 14px;
    }
    
    .order-total {
      font-weight: bold;
      color: #e74c3c;
      font-size: 16px;
    }
    
    .order-items {
      margin-top: 10px;
    }
    
    .order-item {
      color: #666;
      font-size: 14px;
      margin-bottom: 5px;
    }
    
    .order-item-more {
      color: #999;
      font-size: 12px;
      font-style: italic;
    }
    
    .order-card-actions {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
    }
    
    .order-card-actions .btn {
      padding: 8px 16px;
      font-size: 14px;
      border-radius: 6px;
      border: none;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .order-card-actions .btn-primary {
      background: #007bff;
      color: white;
    }
    
    .order-card-actions .btn-primary:hover {
      background: #0056b3;
    }
    
    .order-card-actions .btn-danger {
      background: #dc3545;
      color: white;
    }
    
    .order-card-actions .btn-danger:hover {
      background: #c82333;
    }
    
    /* Á©∫Áä∂ÊÄÅÊ†∑Âºè */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
    }
    
    .empty-state-content {
      max-width: 400px;
      margin: 0 auto;
    }
    
    .empty-state-icon {
      font-size: 64px;
      margin-bottom: 20px;
    }
    
    .empty-state h3 {
      color: #333;
      margin-bottom: 10px;
    }
    
    .empty-state p {
      color: #666;
      margin-bottom: 30px;
    }
    
    .empty-state .btn {
      padding: 12px 24px;
      background: #007bff;
      color: white;
      text-decoration: none;
      border-radius: 6px;
      font-weight: 500;
      transition: background 0.2s ease;
    }
    
    .empty-state .btn:hover {
      background: #0056b3;
      color: white;
    }
  
  .quote-title {
    font-size: 28px;
    font-weight: 600;
    color: #333;
    margin-bottom: 12px;
  }
  
  .quote-meta {
    display: flex;
    gap: 24px;
    flex-wrap: wrap;
    color: #666;
    font-size: 14px;
  }
  
  .quote-meta-item {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .quote-status {
    padding: 6px 16px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 500;
  }
  
  .status-pending {
    background: #fff3cd;
    color: #856404;
  }
  
  .status-quoted {
    background: #d4edda;
    color: #155724;
  }
  
  
  .quote-items {
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 24px;
  }
  
  .section-title {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    margin-bottom: 20px;
    padding-bottom: 12px;
    border-bottom: 2px solid #f0f0f0;
  }
  
  .item-card {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 16px;
  }
  
  .item-card:last-child {
    margin-bottom: 0;
  }
  
  .item-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
  }
  
  .item-name {
    font-size: 18px;
    font-weight: 600;
    color: #333;
  }
  
  .item-price {
    font-size: 24px;
    font-weight: 600;
    color: #e91e63;
  }
  
  .item-details {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 12px;
    font-size: 14px;
    color: #666;
  }
  
  .item-detail {
    display: flex;
    flex-direction: column;
  }
  
  .detail-label {
    font-weight: 500;
    color: #333;
    margin-bottom: 4px;
  }
  
  .quote-summary {
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 24px;
  }
  
  .summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    border-bottom: 1px solid #f0f0f0;
  }
  
  .summary-row:last-child {
    border-bottom: none;
    padding-top: 20px;
    margin-top: 12px;
    border-top: 2px solid #333;
  }
  
  .summary-label {
    font-size: 16px;
    color: #666;
  }
  
  .summary-value {
    font-size: 16px;
    font-weight: 500;
    color: #333;
  }
  
  .summary-total {
    font-size: 24px !important;
    font-weight: 600 !important;
    color: #e91e63 !important;
  }
  
  .quote-actions {
    display: flex;
    gap: 16px;
    justify-content: flex-end;
  }
  
  .btn {
    padding: 14px 28px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    border: none;
    transition: all 0.3s ease;
  }
  
  .btn-secondary {
    background: #f5f5f5;
    color: #333;
    border: 1px solid #e0e0e0;
  }
  
  .btn-secondary:hover {
    background: #e0e0e0;
  }
  
  .btn-primary {
    background: #e91e63;
    color: white;
  }
  
  .btn-primary:hover {
    background: #c2185b;
  }
  
  .btn-primary:disabled {
    background: #ccc;
    cursor: not-allowed;
  }
  
  .loading {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }
  
  .loading-spinner {
    width: 48px;
    height: 48px;
    border: 4px solid #f0f0f0;
    border-top: 4px solid #e91e63;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 20px;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .error {
    background: #ffebee;
    color: #c62828;
    padding: 20px;
    border-radius: 8px;
    border: 1px solid #ef5350;
    margin: 20px 0;
  }
  
  @media (max-width: 768px) {
    .quote-meta {
      flex-direction: column;
      gap: 12px;
    }
    
    .item-details {
      grid-template-columns: 1fr;
    }
    
    .quote-actions {
      flex-direction: column;
    }
    
    .btn {
      width: 100%;
    }
  }
</style>

<div class="quote-detail-container">
  <div id="loading-state" class="loading">
    <div class="loading-spinner"></div>
    <p>Ê≠£Âú®Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖ...</p>
  </div>
  
  <div id="error-state" style="display: none;">
    <div class="error">
      <p id="error-message"></p>
    </div>
    <div class="quote-actions">
      <a href="/pages/model-uploader" class="btn btn-secondary">ËøîÂõû‰∏ä‰º†È°µÈù¢</a>
      <button id="retry-create-btn" class="btn btn-primary" onclick="retryCreateOrder()" style="display: none;">ÈáçÊñ∞ÂàõÂª∫ËÆ¢Âçï</button>
    </div>
  </div>
  
  <div id="quote-detail" style="display: none;">
    <div class="quote-header">
      <div class="quote-title" id="order-number">ËÆ¢Âçï #--</div>
      <div class="quote-actions">
        <button id="refreshBtn" class="refresh-btn" onclick="refreshOrderStatus()" title="Âà∑Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅ">
          üîÑ Âà∑Êñ∞
        </button>
      </div>
      <div class="quote-meta">
        <div class="quote-meta-item">
          <strong>Áä∂ÊÄÅ:</strong>
          <span class="quote-status" id="order-status">ÂæÖÊä•‰ª∑</span>
        </div>
        <div class="quote-meta-item">
          <strong>ÂàõÂª∫Êó∂Èó¥:</strong>
          <span id="order-date">--</span>
        </div>
        <div class="quote-meta-item">
          <strong>ÂÆ¢Êà∑:</strong>
          <span id="customer-name">--</span>
        </div>
      </div>
    </div>
    
    <div class="quote-items">
      <div class="section-title">ËÆ¢ÂçïÈ°πÁõÆ</div>
      <div id="items-list"></div>
    </div>
    
    <div class="quote-summary">
      <div class="section-title">Ë¥πÁî®Ê±áÊÄª</div>
      <div class="summary-row">
        <span class="summary-label">Â∞èËÆ°</span>
        <span class="summary-value" id="subtotal">$0.00</span>
      </div>
      <div class="summary-row">
        <span class="summary-label">ËøêË¥π</span>
        <span class="summary-value">ÂæÖÁ°ÆÂÆö</span>
      </div>
      <div class="summary-row">
        <span class="summary-label summary-total">ÊÄªËÆ°</span>
        <span class="summary-value summary-total" id="total">$0.00</span>
      </div>
    </div>
    
    <div class="quote-actions">
      <button class="btn btn-secondary" onclick="downloadAllFiles()">üì• ‰∏ãËΩΩÊñá‰ª∂</button>
      <a href="/pages/model-uploader" class="btn btn-secondary">ÁªßÁª≠‰∏ä‰º†</a>
      <button id="place-order-btn" class="btn btn-primary" onclick="placeOrder()">Á´ãÂç≥‰∏ãÂçï</button>
    </div>
  </div>
</div>

<script>
// APIÈÖçÁΩÆ
const API_BASE = 'https://shopify-13s4.vercel.app/api';

// ‰ªéURLËé∑ÂèñËÆ¢ÂçïID
const urlParams = new URLSearchParams(window.location.search);
const draftOrderId = urlParams.get('id');

console.log('ËçâÁ®øËÆ¢ÂçïID:', draftOrderId);

// È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñËÆ¢ÂçïËØ¶ÊÉÖ
document.addEventListener('DOMContentLoaded', async function() {
  if (!draftOrderId) {
    // Â¶ÇÊûúÊ≤°ÊúâÊåáÂÆöËÆ¢ÂçïIDÔºåÊòæÁ§∫ÊâÄÊúâËÆ¢ÂçïÂàóË°®
    console.log('Êú™ÊåáÂÆöËÆ¢ÂçïIDÔºåÂä†ËΩΩÊâÄÊúâËÆ¢ÂçïÂàóË°®');
    await loadAllOrders();
    return;
  }
  
  try {
    await loadOrderDetails();
    
    // ËÆæÁΩÆÂÆöÊó∂Âà∑Êñ∞ÔºåÊØè30ÁßíÊ£ÄÊü•‰∏ÄÊ¨°ËÆ¢ÂçïÁä∂ÊÄÅÊõ¥Êñ∞
    setInterval(() => {
      console.log('‚è∞ ÂÆöÊó∂Âà∑Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅ...');
      refreshOrderStatus();
    }, 30000); // 30ÁßíÂà∑Êñ∞‰∏ÄÊ¨°
  } catch (error) {
    console.error('Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖÂ§±Ë¥•:', error);
    showError('Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖÂ§±Ë¥•: ' + error.message);
  }
});

// Âà∑Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅÂáΩÊï∞
async function refreshOrderStatus() {
  try {
    console.log('üîÑ Âà∑Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅ:', draftOrderId);
    
    // Áõ¥Êé•Êü•ËØ¢ÊúÄÊñ∞ÁöÑËÆ¢ÂçïËØ¶ÊÉÖ
    const response = await fetch(`${API_BASE}/get-draft-order-simple?id=${encodeURIComponent(draftOrderId)}`);
    
    if (response.ok) {
      const data = await response.json();
      
      if (data.success && data.draftOrder) {
        const newOrder = data.draftOrder;
        const currentOrder = window.currentDraftOrder;
        
        // Ê£ÄÊü•ÊòØÂê¶ÊúâÁä∂ÊÄÅÊàñ‰ª∑Ê†ºÂèòÂåñ
        if (currentOrder) {
          // Ëé∑ÂèñÂΩìÂâçÁä∂ÊÄÅ
          const currentStatus = getOrderStatus(currentOrder);
          const newStatus = getOrderStatus(newOrder);
          
          const statusChanged = currentStatus.text !== newStatus.text;
          const priceChanged = currentOrder.totalPrice !== newOrder.totalPrice;
          
          // ‰πüÊ£ÄÊü•Ëá™ÂÆö‰πâÂ±ûÊÄß‰∏≠ÁöÑÁä∂ÊÄÅÂèòÂåñ
          let customStatusChanged = false;
          if (currentOrder.lineItems && newOrder.lineItems && 
              currentOrder.lineItems.length > 0 && newOrder.lineItems.length > 0) {
            const currentCustomStatus = currentOrder.lineItems[0].customAttributes?.find(a => a.key === 'Áä∂ÊÄÅ')?.value;
            const newCustomStatus = newOrder.lineItems[0].customAttributes?.find(a => a.key === 'Áä∂ÊÄÅ')?.value;
            customStatusChanged = currentCustomStatus !== newCustomStatus;
          }
          
          if (statusChanged || priceChanged || customStatusChanged) {
            console.log('üìä Ê£ÄÊµãÂà∞ËÆ¢ÂçïÊõ¥Êñ∞:', {
              statusChanged,
              priceChanged,
              customStatusChanged,
              oldStatus: currentStatus.text,
              newStatus: newStatus.text,
              oldPrice: currentOrder.totalPrice,
              newPrice: newOrder.totalPrice
            });
            
            // Êõ¥Êñ∞ÂΩìÂâçËÆ¢ÂçïÊï∞ÊçÆ
            window.currentDraftOrder = newOrder;
            
            // ÈáçÊñ∞Ê∏≤ÊüìËÆ¢ÂçïËØ¶ÊÉÖ
            renderOrderDetails(newOrder);
            
            // ÊòæÁ§∫Êõ¥Êñ∞ÈÄöÁü•
            showSuccessMessage('ËÆ¢ÂçïÁä∂ÊÄÅÂ∑≤Êõ¥Êñ∞ÔºÅ', 3000);
          }
        } else {
          // Â¶ÇÊûúÊ≤°ÊúâÂΩìÂâçËÆ¢ÂçïÊï∞ÊçÆÔºåÁõ¥Êé•Âä†ËΩΩ
          window.currentDraftOrder = newOrder;
          renderOrderDetails(newOrder);
        }
      }
    }
  } catch (error) {
    console.warn('‚ö†Ô∏è Âà∑Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅÂ§±Ë¥•:', error);
  }
}

// Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖ
async function loadOrderDetails() {
  console.log('ÂºÄÂßãÂä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖ...');
  console.log('ËçâÁ®øËÆ¢ÂçïID:', draftOrderId);
  
  try {
    // ÂÖàÊ£ÄÊü•ÊâÄÊúâËçâÁ®øËÆ¢Âçï
    console.log('Ê£ÄÊü•ÊâÄÊúâËçâÁ®øËÆ¢Âçï...');
    const listResponse = await fetch(`${API_BASE}/get-draft-orders`);
    const listData = await listResponse.json();
    console.log('ËçâÁ®øËÆ¢ÂçïÂàóË°®:', listData);
    
    if (listData.success && listData.draftOrders.length === 0) {
      console.log('ËçâÁ®øËÆ¢ÂçïÂàóË°®‰∏∫Á©∫ÔºåÁªßÁª≠Â∞ùËØïÁõ¥Êé•Êü•ËØ¢...');
      // ‰∏çË¶ÅÁõ¥Êé•ÊäõÂá∫ÈîôËØØÔºåÁªßÁª≠Â∞ùËØïÁõ¥Êé•Êü•ËØ¢
    }
    
    // Êü•ÊâæÂåπÈÖçÁöÑËÆ¢Âçï
    let foundOrder = null;
    if (listData.success && listData.draftOrders.length > 0) {
      console.log('ÊêúÁ¥¢ËÆ¢ÂçïID:', draftOrderId);
      console.log('ËÆ¢ÂçïÂàóË°®:', listData.draftOrders.map(o => ({ id: o.id, name: o.name })));
      
      foundOrder = listData.draftOrders.find(order => {
        // Â§öÁßçÂåπÈÖçÊñπÂºè
        const matches = [
          order.id === draftOrderId,
          order.id === decodeURIComponent(draftOrderId),
          order.name === draftOrderId,
          order.name === decodeURIComponent(draftOrderId),
          // Â¶ÇÊûúdraftOrderIdÊòØÊï∞Â≠óIDÔºåÂ∞ùËØïÂåπÈÖçGID
          order.id === `gid://shopify/DraftOrder/${draftOrderId}`,
          order.id === `gid://shopify/DraftOrder/${decodeURIComponent(draftOrderId)}`,
          // ÊèêÂèñGID‰∏≠ÁöÑÊï∞Â≠óÈÉ®ÂàÜËøõË°åÂåπÈÖç
          order.id && order.id.includes(draftOrderId.replace(/\D/g, '')),
          order.id && order.id.includes(decodeURIComponent(draftOrderId).replace(/\D/g, ''))
        ];
        
        const isMatch = matches.some(match => match);
        if (isMatch) {
          console.log('‚úÖ ÊâæÂà∞ÂåπÈÖçËÆ¢Âçï:', { 
            searchId: draftOrderId, 
            orderId: order.id, 
            orderName: order.name 
          });
        }
        return isMatch;
      });
      
      if (foundOrder) {
        console.log('Âú®ÂàóË°®‰∏≠ÊâæÂà∞ËÆ¢Âçï:', foundOrder);
        // ‰ΩøÁî®ÊâæÂà∞ÁöÑËÆ¢ÂçïÊï∞ÊçÆ
        window.currentDraftOrder = foundOrder;
        renderOrderDetails(foundOrder);
        return;
      } else {
        console.log('‚ùå Âú®ËÆ¢ÂçïÂàóË°®‰∏≠Êú™ÊâæÂà∞ÂåπÈÖçÁöÑËÆ¢Âçï');
      }
    }
    
    // Â¶ÇÊûúÂàóË°®‰∏≠Ê≤°ÊúâÊâæÂà∞ÔºåÂ∞ùËØïÁõ¥Êé•Êü•ËØ¢
    console.log('Â∞ùËØïÁõ¥Êé•Êü•ËØ¢ËÆ¢ÂçïËØ¶ÊÉÖ...');
    const response = await fetch(`${API_BASE}/get-draft-order-simple?id=${encodeURIComponent(draftOrderId)}`);
    
    if (!response.ok) {
      if (response.status === 404) {
        throw new Error('ËçâÁ®øËÆ¢Âçï‰∏çÂ≠òÂú®ÔºåÂèØËÉΩÂ∑≤Ë¢´Âà†Èô§Êàñ‰ªéÊú™ÂàõÂª∫„ÄÇËØ∑ÈáçÊñ∞Êèê‰∫§ËØ¢‰ª∑„ÄÇ');
      }
      throw new Error(`APIËØ∑Ê±ÇÂ§±Ë¥•: ${response.status}`);
    }
    
    const data = await response.json();
    console.log('ËÆ¢ÂçïËØ¶ÊÉÖ:', data);
    
    if (!data.draftOrder) {
      throw new Error('ËÆ¢ÂçïÊï∞ÊçÆ‰∏∫Á©∫');
    }
    
    // ‰øùÂ≠òËÆ¢ÂçïÊï∞ÊçÆÂà∞ÂÖ®Â±ÄÂèòÈáè
    window.currentDraftOrder = data.draftOrder;
    
    // Ëé∑ÂèñÊâ©Â±ïÁä∂ÊÄÅ‰ø°ÊÅØ
    
    // Ê∏≤ÊüìËÆ¢ÂçïËØ¶ÊÉÖ
    renderOrderDetails(data.draftOrder);
    
  } catch (error) {
    console.error('Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖÂ§±Ë¥•:', error);
    throw error;
  }
}


// Ê∏≤ÊüìËÆ¢ÂçïËØ¶ÊÉÖ
function renderOrderDetails(order) {
  console.log('Ê∏≤ÊüìËÆ¢ÂçïËØ¶ÊÉÖ:', order);
  
  // Êõ¥Êñ∞ËÆ¢ÂçïÂè∑
  const orderNumberEl = document.getElementById('order-number');
  orderNumberEl.textContent = `ËÆ¢Âçï #${order.name || order.id}`;
  
  // Êõ¥Êñ∞Áä∂ÊÄÅ
  const statusEl = document.getElementById('order-status');
  const status = getOrderStatus(order);
  statusEl.textContent = status.text;
  statusEl.className = `quote-status ${status.className}`;
  
  // Êõ¥Êñ∞Êó•Êúü
  const dateEl = document.getElementById('order-date');
  dateEl.textContent = formatDate(order.createdAt);
  
  // Êõ¥Êñ∞ÂÆ¢Êà∑ÂêçÁß∞
  const customerEl = document.getElementById('customer-name');
  customerEl.textContent = order.email || 'Êú™Áü•ÂÆ¢Êà∑';
  
  // Ê∏≤ÊüìËÆ¢ÂçïÈ°πÁõÆ
  const itemsList = document.getElementById('items-list');
  itemsList.innerHTML = '';
  
  if (order.lineItems && order.lineItems.length > 0) {
    order.lineItems.forEach(item => {
      const itemCard = createItemCard(item);
      itemsList.appendChild(itemCard);
    });
  }
  
  // Êõ¥Êñ∞‰ª∑Ê†º
  updatePrices(order);
  
  // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
  updateButtonState(order);
  
  // ÊòæÁ§∫ËÆ¢ÂçïËØ¶ÊÉÖÔºåÈöêËóèÂä†ËΩΩÁä∂ÊÄÅ
  document.getElementById('loading-state').style.display = 'none';
  document.getElementById('quote-detail').style.display = 'block';
}

// ÂàõÂª∫ËÆ¢ÂçïÈ°πÁõÆÂç°Áâá
function createItemCard(item) {
  const card = document.createElement('div');
  card.className = 'item-card';
  
  // Ëé∑Âèñ‰ª∑Ê†ºÔºö‰ºòÂÖà‰ªé originalUnitPriceÔºåÂÖ∂Ê¨°‰ªé price
  let price = 0;
  if (item.originalUnitPrice) {
    price = parseFloat(item.originalUnitPrice);
  } else if (item.price) {
    price = parseFloat(item.price);
  }
  
  const quantity = item.quantity || 1;
  const itemTotal = price * quantity;
  
  console.log('È°πÁõÆ‰ª∑Ê†º:', { 
    originalUnitPrice: item.originalUnitPrice, 
    price: item.price, 
    calculatedPrice: price,
    quantity,
    itemTotal
  });
  
  // Ëé∑ÂèñËá™ÂÆö‰πâÂ±ûÊÄß
  const attrs = item.customAttributes || [];
  const getAttribute = (key) => {
    const attr = attrs.find(a => a.key === key);
    return attr ? attr.value : '';
  };
  
  card.innerHTML = `
    <div class="item-header">
      <div class="item-name">${item.title || 'Êú™ÂëΩÂêçÈ°πÁõÆ'}</div>
      <div class="item-price">${price > 0 ? `$${itemTotal.toFixed(2)}` : 'ÂæÖÊä•‰ª∑'}</div>
    </div>
    <div class="item-details">
      <div class="item-detail">
        <span class="detail-label">Êï∞Èáè</span>
        <span>${quantity}</span>
      </div>
      <div class="item-detail">
        <span class="detail-label">ÊùêÊñô</span>
        <span>${getAttribute('ÊùêÊñô') || 'Êú™ÊåáÂÆö'}</span>
      </div>
      <div class="item-detail">
        <span class="detail-label">È¢úËâ≤‰∏éË°®Èù¢</span>
        <span>${getAttribute('È¢úËâ≤‰∏éË°®Èù¢') || 'Ëá™ÁÑ∂Ëâ≤'}</span>
      </div>
      <div class="item-detail">
        <span class="detail-label">Á≤æÂ∫¶Á≠âÁ∫ß</span>
        <span>${getAttribute('Á≤æÂ∫¶Á≠âÁ∫ß') || 'Ê†áÂáÜ'}</span>
      </div>
      <div class="item-detail">
        <span class="detail-label">ÂÖ¨Â∑ÆÊ†áÂáÜ</span>
        <span>${getAttribute('ÂÖ¨Â∑ÆÊ†áÂáÜ') || 'GB/T 1804-2000 mÁ∫ß'}</span>
      </div>
      <div class="item-detail">
        <span class="detail-label">Ë°®Èù¢Á≤óÁ≥ôÂ∫¶</span>
        <span>${getAttribute('Ë°®Èù¢Á≤óÁ≥ôÂ∫¶') || 'Ra3.2'}</span>
      </div>
      ${getAttribute('Â§áÊ≥®') ? `
      <div class="item-detail" style="grid-column: 1 / -1;">
        <span class="detail-label">Â§áÊ≥®</span>
        <span>${getAttribute('Â§áÊ≥®')}</span>
      </div>
      ` : ''}
    </div>
  `;
  
  return card;
}

// Êõ¥Êñ∞‰ª∑Ê†º
function updatePrices(order) {
  let subtotal = 0;
  
  // ‰ºòÂÖà‰ªétotalPriceËé∑Âèñ
  if (order.totalPrice) {
    subtotal = parseFloat(order.totalPrice);
    console.log('‰ªéorder.totalPriceËé∑Âèñ‰ª∑Ê†º:', subtotal);
  } 
  // Â¶ÇÊûúÊ≤°ÊúâtotalPriceÔºåÂ∞ùËØï‰ªélineItemsËÆ°ÁÆó
  else if (order.lineItems && order.lineItems.length > 0) {
    order.lineItems.forEach(item => {
      const price = parseFloat(item.originalUnitPrice || item.price || 0);
      const quantity = item.quantity || 1;
      subtotal += price * quantity;
    });
    console.log('‰ªélineItemsËÆ°ÁÆó‰ª∑Ê†º:', subtotal);
  }
  
  const formattedPrice = subtotal > 0 ? `$${subtotal.toFixed(2)}` : 'ÂæÖÊä•‰ª∑';
  
  document.getElementById('subtotal').textContent = formattedPrice;
  document.getElementById('total').textContent = formattedPrice;
  
  console.log('‰ª∑Ê†ºÊòæÁ§∫:', formattedPrice);
}

// Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
function updateButtonState(order) {
  const placeOrderBtn = document.getElementById('place-order-btn');
  
  // Ê£ÄÊü•ÊòØÂê¶Â∑≤Êä•‰ª∑
  let isQuoted = false;
  
  // ‰ºòÂÖàÊ£ÄÊü•Ëá™ÂÆö‰πâÂ±ûÊÄß‰∏≠ÁöÑÁä∂ÊÄÅ
  if (order.lineItems && order.lineItems.length > 0) {
    const firstItem = order.lineItems[0];
    const attrs = firstItem.customAttributes || [];
    const statusAttr = attrs.find(a => a.key === 'Áä∂ÊÄÅ');
    
    if (statusAttr && statusAttr.value === 'Â∑≤Êä•‰ª∑') {
      isQuoted = true;
      console.log('‚úÖ ‰ªéËá™ÂÆö‰πâÂ±ûÊÄßÁ°ÆËÆ§Â∑≤Êä•‰ª∑');
    }
  }
  
  // ÂõûÈÄÄÂà∞Ê£ÄÊü•totalPrice
  if (!isQuoted) {
    const totalPrice = parseFloat(order.totalPrice || 0);
    if (totalPrice > 0) {
      isQuoted = true;
      console.log('‚úÖ ‰ªétotalPriceÁ°ÆËÆ§Â∑≤Êä•‰ª∑:', totalPrice);
    }
  }
  
  if (!isQuoted) {
    placeOrderBtn.disabled = true;
    placeOrderBtn.textContent = 'Á≠âÂæÖÊä•‰ª∑';
    placeOrderBtn.style.opacity = '0.6';
    placeOrderBtn.style.cursor = 'not-allowed';
    console.log('‚è≥ ÊåâÈíÆÁä∂ÊÄÅ: Á≠âÂæÖÊä•‰ª∑ÔºàÁ¶ÅÁî®Ôºâ');
  } else {
    placeOrderBtn.disabled = false;
    placeOrderBtn.textContent = 'Á´ãÂç≥‰∏ãÂçï';
    placeOrderBtn.style.opacity = '1';
    placeOrderBtn.style.cursor = 'pointer';
    console.log('‚úÖ ÊåâÈíÆÁä∂ÊÄÅ: Á´ãÂç≥‰∏ãÂçïÔºàÂêØÁî®Ôºâ');
  }
}

// Ëé∑ÂèñËÆ¢ÂçïÁä∂ÊÄÅ
function getOrderStatus(order) {
  // ‰ºòÂÖàÊ£ÄÊü•Ëá™ÂÆö‰πâÂ±ûÊÄß‰∏≠ÁöÑÁä∂ÊÄÅ
  if (order.lineItems && order.lineItems.length > 0) {
    const firstItem = order.lineItems[0];
    const attrs = firstItem.customAttributes || [];
    const statusAttr = attrs.find(a => a.key === 'Áä∂ÊÄÅ');
    
    if (statusAttr) {
      const status = statusAttr.value;
      console.log('‰ªéËá™ÂÆö‰πâÂ±ûÊÄßËé∑ÂèñÁä∂ÊÄÅ:', status);
      
      if (status === 'Â∑≤Êä•‰ª∑') {
        return {
          text: 'Â∑≤Êä•‰ª∑',
          className: 'status-quoted'
        };
      }
    }
  }
  
  // ÂõûÈÄÄÂà∞Ê£ÄÊü•totalPrice
  const totalPrice = parseFloat(order.totalPrice || 0);
  console.log('‰ªétotalPriceÂà§Êñ≠Áä∂ÊÄÅ:', totalPrice);
  
  if (totalPrice > 0) {
    return {
      text: 'Â∑≤Êä•‰ª∑',
      className: 'status-quoted'
    };
  } else {
    return {
      text: 'ÂæÖÊä•‰ª∑',
      className: 'status-pending'
    };
  }
}

// Ê†ºÂºèÂåñÊó•Êúü
function formatDate(dateString) {
  if (!dateString) return '--';
  
  try {
    const date = new Date(dateString);
    return date.toLocaleString('zh-CN', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    });
  } catch (error) {
    console.error('Êó•ÊúüÊ†ºÂºèÂåñÂ§±Ë¥•:', error);
    return '--';
  }
}

// Á´ãÂç≥‰∏ãÂçïÔºàÊ∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶Ôºâ
async function placeOrder() {
  const order = window.currentDraftOrder;
  
  if (!order) {
    alert('ËÆ¢ÂçïÊï∞ÊçÆÊú™Âä†ËΩΩÔºåËØ∑Âà∑Êñ∞È°µÈù¢ÈáçËØï');
    return;
  }
  
  const totalPrice = parseFloat(order.totalPrice || 0);
  
  if (totalPrice <= 0) {
    alert('ËÆ¢ÂçïÂ∞öÊú™Êä•‰ª∑ÔºåËØ∑Á≠âÂæÖÂÆ¢ÊúçÊä•‰ª∑ÂêéÂÜç‰∏ãÂçï');
    return;
  }
  
  // Á°ÆËÆ§‰∏ãÂçï
  if (!confirm(`Á°ÆËÆ§Â∞ÜËÆ¢ÂçïÊ∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶Ôºü\n\nÊÄªÈáëÈ¢ù: $${totalPrice.toFixed(2)}\n\nÁÇπÂáªÁ°ÆÂÆöÂêéÂ∞ÜË∑≥ËΩ¨Âà∞Ë¥≠Áâ©ËΩ¶È°µÈù¢„ÄÇ`)) {
    return;
  }
  
  try {
    console.log('ÂºÄÂßãÊ∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶...', order);
    
    // ÂáÜÂ§áË¥≠Áâ©ËΩ¶È°πÁõÆ
    const cartItems = [];
    
    if (order.lineItems && order.lineItems.length > 0) {
      for (const item of order.lineItems) {
        const attrs = item.customAttributes || [];
        
        // ÊûÑÂª∫propertiesÂØπË±°
        const properties = {
          'Order Type': '3D Model Quote',
          'Draft Order ID': draftOrderId,
          'Quote Status': 'Quoted'
        };
        
        // Ê∑ªÂä†ÊâÄÊúâËá™ÂÆö‰πâÂ±ûÊÄß
        attrs.forEach(attr => {
          properties[attr.key] = attr.value;
        });
        
        // Ê∑ªÂä†Êä•‰ª∑‰ª∑Ê†º
        properties['Quoted Price'] = String(item.price || 0);
        
        cartItems.push({
          id: 0, // ‰ΩøÁî®Êó†ÊïàÁöÑ‰∫ßÂìÅIDÔºåËß¶ÂèëËé∑ÂèñÁúüÂÆû‰∫ßÂìÅIDÁöÑÈÄªËæë
          quantity: item.quantity || 1,
          properties: properties
        });
      }
    }
    
    console.log('ÂáÜÂ§áÊ∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶:', cartItems);
    
    // Ê£ÄÊü•ÊòØÂê¶ÊúâÊúâÊïàÁöÑ‰∫ßÂìÅID
    const hasValidProductId = cartItems.some(item => item.id && item.id !== 0);
    
    if (!hasValidProductId) {
      console.log('Ê≤°ÊúâÊúâÊïàÁöÑ‰∫ßÂìÅIDÔºå‰ΩøÁî®Ëá™ÂÆö‰πâÊä•‰ª∑ÊñπÊ°à');
      
      // ‰ΩøÁî®ÁÆÄÂçïÁöÑÊñπÊ≥ïËé∑Âèñ‰∫ßÂìÅIDÔºåÂèÇËÄÉÈ°πÁõÆÁöÑÂÅöÊ≥ï
      console.log('Ëé∑Âèñ‰∫ßÂìÅID...');
      
      let genericProductId = null;
      
      // ÊñπÊ≥ï1: ‰ªéÂÖ®Â±ÄÂèòÈáèËé∑Âèñ
      if (window.theme && window.theme.defaultVariantId) {
        genericProductId = window.theme.defaultVariantId;
        console.log('‚úÖ ‰ΩøÁî®‰∏ªÈ¢òÈªòËÆ§‰∫ßÂìÅID:', genericProductId);
      }
      
      // ÊñπÊ≥ï2: ‰ªéÈ°µÈù¢Êï∞ÊçÆËé∑Âèñ
      if (!genericProductId) {
        const productData = document.querySelector('[data-product-json]');
        if (productData) {
          try {
            const product = JSON.parse(productData.textContent);
            if (product && product.selected_or_first_available_variant) {
              genericProductId = product.selected_or_first_available_variant.id.toString();
              console.log('‚úÖ ‰ΩøÁî®È°µÈù¢‰∫ßÂìÅID:', genericProductId);
            }
          } catch (e) {
            console.log('Ëß£Êûê‰∫ßÂìÅÊï∞ÊçÆÂ§±Ë¥•:', e);
          }
        }
      }
      
      // ÊñπÊ≥ï3: ‰ΩøÁî®Á°¨ÁºñÁ†ÅÁöÑ‰∫ßÂìÅIDÔºàÊÇ®ÁöÑÂÆûÈôÖ‰∫ßÂìÅIDÔºâ
      if (!genericProductId) {
        // ‰ΩøÁî®ÊÇ®ÂïÜÂ∫ó‰∏≠ÁöÑ3DÊ®°Âûã‰∏ä‰º†‰∏éÊä•‰ª∑ÊúçÂä°‰∫ßÂìÅÂèò‰ΩìID
        genericProductId = '51217840308511'; // ÊÇ®ÁöÑÂÆûÈôÖ‰∫ßÂìÅÂèò‰ΩìID
        console.log('‚úÖ ‰ΩøÁî®ÂïÜÂ∫ó‰∫ßÂìÅID:', genericProductId);
      }
      
      if (!genericProductId) {
        alert('Á≥ªÁªüÈÖçÁΩÆÈîôËØØÔºöÊó†Ê≥ïËé∑Âèñ‰∫ßÂìÅID„ÄÇËØ∑ËÅîÁ≥ªÂÆ¢ÊúçÂÆåÊàê‰∏ãÂçï„ÄÇ');
        return;
      }
      
      // Áõ¥Êé•‰ΩøÁî® complete-draft-order APIÔºåÈÅøÂÖçË¥≠Áâ©ËΩ¶‰ª∑Ê†ºÈóÆÈ¢ò
      console.log('üîÑ Áõ¥Êé•ÂÆåÊàêËçâÁ®øËÆ¢ÂçïÔºåÈÅøÂÖçË¥≠Áâ©ËΩ¶‰ª∑Ê†ºÈóÆÈ¢ò...');
      
      try {
        const completeResponse = await fetch(`${API_BASE}/complete-draft-order`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            draftOrderId: draftOrderId
          })
        });
        
        console.log('üì° ÂÆåÊàêËçâÁ®øËÆ¢ÂçïÂìçÂ∫î:', completeResponse.status);
        
        if (completeResponse.ok) {
          const completeResult = await completeResponse.json();
          console.log('üì¶ ÂÆåÊàêÁªìÊûú:', completeResult);
          
          if (completeResult.success) {
            alert(`ËÆ¢ÂçïÂ∑≤ÂáÜÂ§áÂ∞±Áª™ÔºÅ\n\nËÆ¢ÂçïÂè∑Ôºö${completeResult.draftOrder.name}\nÈáëÈ¢ùÔºö$${totalPrice}\n\nÂç≥Â∞ÜË∑≥ËΩ¨Âà∞‰ªòÊ¨æÈ°µÈù¢...`);
            
            if (completeResult.draftOrder.invoiceUrl) {
              window.location.href = completeResult.draftOrder.invoiceUrl;
            } else {
              window.location.href = `/account/orders`;
            }
            return;
          }
        }
        
        // Â¶ÇÊûúÂÆåÊàêÂ§±Ë¥•ÔºåÊòæÁ§∫ÈîôËØØ‰ø°ÊÅØ
        throw new Error('ÂÆåÊàêËÆ¢ÂçïÂ§±Ë¥•');
        
      } catch (error) {
        console.error('‚ùå ÂÆåÊàêËçâÁ®øËÆ¢ÂçïÂ§±Ë¥•:', error);
        
        // Êèê‰æõÂ§áÁî®ÊñπÊ°à
        const orderInfo = `
Êó†Ê≥ïËá™Âä®ÂÆåÊàêËÆ¢ÂçïÔºåËØ∑ËÅîÁ≥ªÂÆ¢ÊúçÂÆåÊàê‰∏ãÂçïÔºö

ËÆ¢ÂçïËØ¶ÊÉÖÔºö
- ËØ¢‰ª∑ÂçïÂè∑Ôºö${order.name}
- ÂÆ¢Êà∑ÈÇÆÁÆ±Ôºö${order.email}
- ËÆ¢ÂçïÈáëÈ¢ùÔºö$${totalPrice}
- Êñá‰ª∂‰ø°ÊÅØÔºö${order.lineItems?.[0]?.title || '3DÊ®°Âûã'}

ÂÆ¢ÊúçÈÇÆÁÆ±Ôºösupport@example.com
        `;
        
        alert(orderInfo);
        return;
      }
    }
    
  } catch (error) {
    console.error('‰∏ãÂçïÂ§±Ë¥•:', error);
    alert('‰∏ãÂçïÂ§±Ë¥•: ' + error.message);
  }
}

// Âä†ËΩΩÊâÄÊúâËÆ¢ÂçïÂàóË°®
async function loadAllOrders() {
  try {
    console.log('Âä†ËΩΩÊâÄÊúâËÆ¢ÂçïÂàóË°®...');
    const response = await fetch(`${API_BASE}/get-draft-orders`);
    
    if (!response.ok) {
      throw new Error(`APIËØ∑Ê±ÇÂ§±Ë¥•: ${response.status}`);
    }
    
    const data = await response.json();
    console.log('ËÆ¢ÂçïÂàóË°®Êï∞ÊçÆ:', data);
    
    if (data.success && data.draftOrders.length > 0) {
      renderOrdersList(data.draftOrders);
    } else {
      showEmptyState();
    }
  } catch (error) {
    console.error('Âä†ËΩΩËÆ¢ÂçïÂàóË°®Â§±Ë¥•:', error);
    showError('Âä†ËΩΩËÆ¢ÂçïÂàóË°®Â§±Ë¥•: ' + error.message);
  }
}

// Ê∏≤ÊüìËÆ¢ÂçïÂàóË°®
function renderOrdersList(orders) {
  console.log('Ê∏≤ÊüìËÆ¢ÂçïÂàóË°®:', orders);
  
  // ÈöêËóèÂçï‰∏™ËÆ¢ÂçïËØ¶ÊÉÖ
  document.getElementById('quote-detail').style.display = 'none';
  document.getElementById('loading-state').style.display = 'none';
  
  // ÊòæÁ§∫ËÆ¢ÂçïÂàóË°®ÂÆπÂô®
  let ordersListContainer = document.getElementById('orders-list-container');
  if (!ordersListContainer) {
    ordersListContainer = document.createElement('div');
    ordersListContainer.id = 'orders-list-container';
    ordersListContainer.className = 'orders-list-container';
    
    // ÊèíÂÖ•Âà∞È°µÈù¢‰∏≠
    const mainContent = document.querySelector('.quote-detail-container');
    if (mainContent) {
      mainContent.appendChild(ordersListContainer);
    } else {
      console.error('Êú™ÊâæÂà∞ .quote-detail-container ÂÖÉÁ¥†');
      document.body.appendChild(ordersListContainer);
    }
  }
  
  ordersListContainer.innerHTML = `
    <div class="orders-list-header">
      <h2>ÊàëÁöÑËØ¢‰ª∑ËÆ¢Âçï</h2>
      <p>ÁÇπÂáªËÆ¢ÂçïÊü•ÁúãËØ¶ÊÉÖ</p>
    </div>
    <div class="orders-list">
      ${orders.map(order => createOrderCard(order)).join('')}
    </div>
  `;
  
  ordersListContainer.style.display = 'block';
}

// ÂàõÂª∫ËÆ¢ÂçïÂç°Áâá
function createOrderCard(order) {
  const status = getOrderStatus(order);
  const date = formatDate(order.createdAt);
  
  return `
    <div class="order-card" onclick="viewOrder('${order.id}')">
      <div class="order-card-header">
        <div class="order-number">${order.name}</div>
        <div class="order-status ${status.className}">${status.text}</div>
      </div>
      <div class="order-card-body">
        <div class="order-info">
          <div class="order-date">ÂàõÂª∫Êó∂Èó¥: ${date}</div>
          <div class="order-total">${order.totalPrice ? `$${parseFloat(order.totalPrice).toFixed(2)}` : 'ÂæÖÊä•‰ª∑'}</div>
        </div>
        ${order.lineItems && order.lineItems.length > 0 ? `
          <div class="order-items">
            ${order.lineItems.slice(0, 2).map(item => `
              <div class="order-item">
                ${item.title} ${item.quantity > 1 ? `√ó${item.quantity}` : ''}
              </div>
            `).join('')}
            ${order.lineItems.length > 2 ? `<div class="order-item-more">...ËøòÊúâ${order.lineItems.length - 2}‰∏™È°πÁõÆ</div>` : ''}
          </div>
        ` : ''}
      </div>
      <div class="order-card-actions">
        <button class="btn btn-primary" onclick="event.stopPropagation(); viewOrder('${order.id}')">
          Êü•ÁúãËØ¶ÊÉÖ
        </button>
        <button class="btn btn-danger" onclick="event.stopPropagation(); deleteOrder('${order.id}')">
          Âà†Èô§ËÆ¢Âçï
        </button>
      </div>
    </div>
  `;
}

// Êü•ÁúãËÆ¢ÂçïËØ¶ÊÉÖ
function viewOrder(orderId) {
  console.log('Êü•ÁúãËÆ¢Âçï:', orderId);
  window.location.href = `${window.location.pathname}?id=${encodeURIComponent(orderId)}`;
}

// Âà†Èô§ËÆ¢Âçï
async function deleteOrder(orderId) {
  if (!confirm('Á°ÆÂÆöË¶ÅÂà†Èô§Ëøô‰∏™ËÆ¢ÂçïÂêóÔºüÊ≠§Êìç‰Ωú‰∏çÂèØÊí§ÈîÄ„ÄÇ')) {
    return;
  }
  
  try {
    console.log('Âà†Èô§ËÆ¢Âçï:', orderId);
    const response = await fetch(`${API_BASE}/delete-draft-order`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ draftOrderId: orderId })
    });
    
    const data = await response.json();
    
    if (data.success) {
      showSuccessMessage('ËÆ¢ÂçïÂà†Èô§ÊàêÂäüÔºÅ');
      // ÈáçÊñ∞Âä†ËΩΩËÆ¢ÂçïÂàóË°®
      setTimeout(() => {
        loadAllOrders();
      }, 1000);
    } else {
      throw new Error(data.error || 'Âà†Èô§Â§±Ë¥•');
    }
  } catch (error) {
    console.error('Âà†Èô§ËÆ¢ÂçïÂ§±Ë¥•:', error);
    showError('Âà†Èô§ËÆ¢ÂçïÂ§±Ë¥•: ' + error.message);
  }
}

// ÊòæÁ§∫Á©∫Áä∂ÊÄÅ
function showEmptyState() {
  // ÈöêËóèÂÖ∂‰ªñÂÜÖÂÆπ
  document.getElementById('quote-detail').style.display = 'none';
  document.getElementById('loading-state').style.display = 'none';
  
  let emptyState = document.getElementById('empty-state');
  if (!emptyState) {
    emptyState = document.createElement('div');
    emptyState.id = 'empty-state';
    emptyState.className = 'empty-state';
    
    const mainContent = document.querySelector('.quote-detail-container');
    if (mainContent) {
      mainContent.appendChild(emptyState);
    } else {
      console.error('Êú™ÊâæÂà∞ .quote-detail-container ÂÖÉÁ¥†');
      document.body.appendChild(emptyState);
    }
  }
  
  emptyState.innerHTML = `
    <div class="empty-state-content">
      <div class="empty-state-icon">üìã</div>
      <h3>ÊöÇÊó†ËØ¢‰ª∑ËÆ¢Âçï</h3>
      <p>ÊÇ®ËøòÊ≤°ÊúâÊèê‰∫§ËøáËØ¢‰ª∑ËØ∑Ê±Ç</p>
      <a href="/pages/quote-request" class="btn btn-primary">
        Á´ãÂç≥ËØ¢‰ª∑
      </a>
    </div>
  `;
  
  emptyState.style.display = 'block';
}

// ÊòæÁ§∫ÊàêÂäüÊ∂àÊÅØ
function showSuccessMessage(message, duration = 3000) {
  // ÂàõÂª∫ÊàêÂäüÊ∂àÊÅØÂÖÉÁ¥†
  const successMsg = document.createElement('div');
  successMsg.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: #28a745;
    color: white;
    padding: 12px 20px;
    border-radius: 6px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 10000;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.3s ease;
  `;
  successMsg.textContent = message;
  
  document.body.appendChild(successMsg);
  
  // Ëá™Âä®ÁßªÈô§
  setTimeout(() => {
    successMsg.style.opacity = '0';
    successMsg.style.transform = 'translateX(100%)';
    setTimeout(() => {
      if (successMsg.parentNode) {
        successMsg.parentNode.removeChild(successMsg);
      }
    }, 300);
  }, duration);
}

// ÊòæÁ§∫ÈîôËØØ
function showError(message) {
  document.getElementById('loading-state').style.display = 'none';
  document.getElementById('quote-detail').style.display = 'none';
  document.getElementById('error-state').style.display = 'block';
  document.getElementById('error-message').textContent = message;
  
  // Â¶ÇÊûúÊòØËÆ¢Âçï‰∏çÂ≠òÂú®ÈîôËØØÔºåÊòæÁ§∫ÈáçÊñ∞ÂàõÂª∫ÊåâÈíÆ
  if (message.includes('ËçâÁ®øËÆ¢Âçï‰∏çÂ≠òÂú®') || message.includes('Ê≤°ÊúâËçâÁ®øËÆ¢Âçï')) {
    document.getElementById('retry-create-btn').style.display = 'inline-block';
  }
}

// ÈáçÊñ∞ÂàõÂª∫ËÆ¢Âçï
async function retryCreateOrder() {
  const retryBtn = document.getElementById('retry-create-btn');
  retryBtn.disabled = true;
  retryBtn.textContent = 'ÂàõÂª∫‰∏≠...';
  
  try {
    // Ë∑≥ËΩ¨Âà∞‰∏ä‰º†È°µÈù¢ÔºåËÆ©Áî®Êà∑ÈáçÊñ∞Êèê‰∫§
    alert('ËÆ¢Âçï‰∏çÂ≠òÂú®ÔºåÂ∞ÜË∑≥ËΩ¨Âà∞‰∏ä‰º†È°µÈù¢ÈáçÊñ∞ÂàõÂª∫ËÆ¢Âçï„ÄÇ\n\nËØ∑ÈáçÊñ∞‰∏ä‰º†Êñá‰ª∂Âπ∂Â°´ÂÜôÈÖçÁΩÆÂèÇÊï∞„ÄÇ');
    window.location.href = '/pages/model-uploader';
  } catch (error) {
    console.error('ÈáçËØïÂàõÂª∫ËÆ¢ÂçïÂ§±Ë¥•:', error);
    retryBtn.disabled = false;
    retryBtn.textContent = 'ÈáçÊñ∞ÂàõÂª∫ËÆ¢Âçï';
    alert('Ë∑≥ËΩ¨Â§±Ë¥•ÔºåËØ∑ÊâãÂä®ËÆøÈóÆ‰∏ä‰º†È°µÈù¢');
  }
}

// ‰∏ãËΩΩÊâÄÊúâÊñá‰ª∂
async function downloadAllFiles() {
  if (!window.currentDraftOrder || !window.currentDraftOrder.lineItems) {
    alert('Ê≤°ÊúâÂèØ‰∏ãËΩΩÁöÑÊñá‰ª∂„ÄÇ');
    return;
  }

  console.log('ÂºÄÂßã‰∏ãËΩΩÊñá‰ª∂...');
  
  for (const item of window.currentDraftOrder.lineItems) {
    const fileIdAttr = item.customAttributes.find(attr => attr.key === 'Êñá‰ª∂ID');
    const fileNameAttr = item.customAttributes.find(attr => attr.key === 'Êñá‰ª∂');
    
    if (fileIdAttr && fileIdAttr.value) {
      const fileId = fileIdAttr.value;
      const fileName = fileNameAttr ? fileNameAttr.value : item.title;
      
      console.log('‰∏ãËΩΩÊñá‰ª∂:', fileName, 'ID:', fileId);
      
      try {
        // Ê£ÄÊü•ÊòØÂê¶ÊòØÊú¨Âú∞Â≠òÂÇ®ÁöÑÊñá‰ª∂
        if (fileId.startsWith('file_') && window.fileStorageManager) {
          const fileInfo = window.fileStorageManager.getFileInfo(fileId);
          if (fileInfo && fileInfo.url) {
            // ‰ªéÊú¨Âú∞Â≠òÂÇ®‰∏ãËΩΩ
            window.fileStorageManager.downloadFile(fileInfo.url, fileName);
            console.log('‚úÖ Êú¨Âú∞Êñá‰ª∂‰∏ãËΩΩÂÆåÊàê:', fileName);
          } else {
            console.warn('‚ö†Ô∏è Êú¨Âú∞Êñá‰ª∂‰∏çÂ≠òÂú®:', fileId);
            alert(`Êñá‰ª∂ "${fileName}" Âú®Êú¨Âú∞Â≠òÂÇ®‰∏≠‰∏çÂ≠òÂú®ÔºåÂèØËÉΩÂ∑≤Ë¢´Ê∏ÖÁêÜ„ÄÇ`);
          }
        } else {
          // Â∞ùËØï‰ªéAPI‰∏ãËΩΩ
          const response = await fetch(`${API_BASE}/download-file?id=${encodeURIComponent(fileId)}`);
          if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove();
            console.log('‚úÖ APIÊñá‰ª∂‰∏ãËΩΩÂÆåÊàê:', fileName);
          } else {
            throw new Error(`‰∏ãËΩΩÂ§±Ë¥•: ${response.status}`);
          }
        }
      } catch (error) {
        console.error(`‰∏ãËΩΩÊñá‰ª∂ ${fileName} Â§±Ë¥•:`, error);
        alert(`‰∏ãËΩΩÊñá‰ª∂ "${fileName}" Â§±Ë¥•: ${error.message}`);
      }
    } else {
      console.warn('Êñá‰ª∂Ê≤°ÊúâÊñá‰ª∂ID:', item.title);
      alert(`Êñá‰ª∂ "${item.title}" Ê≤°ÊúâÊâæÂà∞Êñá‰ª∂IDÔºåÊó†Ê≥ï‰∏ãËΩΩ„ÄÇ`);
    }
  }
  
  console.log('Êñá‰ª∂‰∏ãËΩΩÂÆåÊàê');
}

// Âú® JavaScript ‰∏≠Ê∑ªÂä†ÈÇÆÁÆ±È™åËØÅÔºåÁ°Æ‰øùÂè™ÊòæÁ§∫ÂΩìÂâçÂÆ¢Êà∑ÁöÑËÆ¢Âçï
function filterOrdersByCustomerEmail() {
  const customerEmailDiv = document.querySelector('.customer-authenticated');
  if (!customerEmailDiv) return null;
  
  const customerEmail = customerEmailDiv.getAttribute('data-customer-email');
  console.log('ÂΩìÂâçÁôªÂΩïÂÆ¢Êà∑ÈÇÆÁÆ±:', customerEmail);
  return customerEmail;
}

// ‰øÆÊîπ loadDraftOrders ÂáΩÊï∞ÔºåÊ∑ªÂä†ÈÇÆÁÆ±ËøáÊª§
const originalLoadDraftOrders = window.loadDraftOrders;
if (originalLoadDraftOrders) {
  window.loadDraftOrders = async function() {
    const customerEmail = filterOrdersByCustomerEmail();
    if (!customerEmail) {
      console.error('Êú™ÊâæÂà∞ÂÆ¢Êà∑ÈÇÆÁÆ±ÔºåÊó†Ê≥ïÂä†ËΩΩËÆ¢Âçï');
      return;
    }
    
    // Ë∞ÉÁî®ÂéüÂáΩÊï∞Âä†ËΩΩËÆ¢Âçï
    await originalLoadDraftOrders();
    
    // ËøáÊª§ËÆ¢ÂçïÔºåÂè™ÊòæÁ§∫ÂΩìÂâçÂÆ¢Êà∑ÁöÑ
    const allOrders = document.querySelectorAll('.order-card');
    allOrders.forEach(orderCard => {
      const emailElement = orderCard.querySelector('[data-order-email]');
      if (emailElement) {
        const orderEmail = emailElement.getAttribute('data-order-email');
        if (orderEmail !== customerEmail) {
          // ÈöêËóè‰∏çÂ±û‰∫éÂΩìÂâçÂÆ¢Êà∑ÁöÑËÆ¢Âçï
          orderCard.style.display = 'none';
        }
      }
    });
  };
}
</script>

</div>
<!-- ÂÖ≥Èó≠ÂÆ¢Êà∑Â∑≤ÁôªÂΩïÁöÑdiv -->
{% endunless %}
